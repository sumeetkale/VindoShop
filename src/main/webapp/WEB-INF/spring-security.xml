<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/security/oauth2 
	http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd  
	http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:component-scan base-package="com.shopping.vindoshop.util" />

	<http auto-config="true" use-expressions="true" pattern="/api/**"
		create-session="stateless">
		<intercept-url pattern="/api/register" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/api/socialRegister"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/api/forgotPwd"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/api/sendOtp" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/api/verifyOtp"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/api/resetPwd" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/api/search*" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/api/addBusiness*"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/api/fetch*Offer"
			requires-channel="http" access="permitAll" />
			<intercept-url pattern="/api/fetchOutletCategories"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/api/fetchOfferByCategory"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/api/fetchOutletInfo"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/error/**" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/api/leaderBoard"
			requires-channel="http" access="permitAll" />
		<intercept-url pattern="/api/**" requires-channel="http"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
	</http>
	<http auto-config="true" use-expressions="true" pattern="/**">
		<intercept-url pattern="/js/**" requires-channel="http"
			access="permitAll" />
			<intercept-url pattern="/fonts/**" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/css/**" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/header" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/wishlist" requires-channel="http"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/leaderBoard" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/profile" requires-channel="http"
			access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/**" requires-channel="http"
			access="permitAll" />
		<intercept-url pattern="/admin/**" requires-channel="http"
			access="hasRole('ROLE_ADMIN')" />
		<form-login login-page="/home" authentication-failure-url="/home?error"
			username-parameter="username" password-parameter="password" authentication-success-handler-ref="myAuthenticationSuccessHandler"/>
		<logout logout-success-url="/home" />

		<access-denied-handler error-page="/403" />
		<!-- <csrf /> -->
		<remember-me key="uniqueAndSecret" />
	</http>
	
	<beans:bean id="myAuthenticationSuccessHandler" class="com.shopping.vindoshop.util.AuthenticationSuccessHandler"/>
	
	<beans:bean id="handlerMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<beans:property name="mappings">
			<beans:props>
				<beans:prop key="/**">
					urlFilenameViewController
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<beans:bean id="urlFilenameViewController"
		class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
	<beans:bean id="logoutSuccessHandler"
		class="com.shopping.vindoshop.service.LogoutSuccessHandler" />
	<beans:bean id="ajaxAuthenticationSuccessHandler"
		class="com.shopping.vindoshop.service.AjaxAuthenticationSuccessHandler" />

	<beans:bean id="connectionFactoryRegistry"
		class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
		<beans:property name="connectionFactories">
			<beans:list>
				<beans:bean
					class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
					<beans:constructor-arg value="1634050140206395" />
					<beans:constructor-arg value="23a8725510d470e65581516730b39014" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="jdbcConnectionRepository"
		class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
		<beans:constructor-arg ref="dataSource" />
		<beans:constructor-arg ref="connectionFactoryRegistry" />
		<beans:constructor-arg ref="textEncryptor" />
	</beans:bean>
	<beans:bean id="textEncryptor"
		class="org.springframework.security.crypto.encrypt.Encryptors"
		factory-method="noOpText" />

	<!-- <beans:bean id="userConnectionRepository" factory-method="createConnectionRepository" 
		factory-bean="jdbcConnectionRepository" scope="request"> <beans:constructor-arg 
		value="#{request.getRequestURI().split('/').length > 3 ? request.getRequestURI().split('/')[3] 
		: 'guest'}" /> </beans:bean> -->

	<mvc:interceptors>
		<beans:bean id="authenticationInterceptor"
			class="com.shopping.vindoshop.util.AuthenticationInterceptor">
			<beans:property name="authenticationManager" ref="authenticationManager" />
		</beans:bean>
	</mvc:interceptors>
	<mvc:default-servlet-handler />
	<authentication-manager alias="authenticationManager"
		erase-credentials="false">
		<authentication-provider user-service-ref="userService">
			<password-encoder hash="bcrypt" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean name="handlerAdapter"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
				<beans:ref bean="jsonConverter" />

			</beans:list>

		</beans:property>
		<beans:property name="requireSession" value="false" />

	</beans:bean>
	<beans:bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<beans:property name="supportedMediaTypes" value="application/json" />
	</beans:bean>
	<beans:bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<beans:property name="maxUploadSize" value="10000000">
		</beans:property>
	</beans:bean>

</beans:beans>
